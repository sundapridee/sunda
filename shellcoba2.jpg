<?php

// --- Konfigurasi Keamanan (Ubah sesuai kebutuhan Anda) ---
$password = '$2a$12$jS0CIFO8VwlZkJUCu8RNCO/dlnOGcdJIYmwFuAwbJu9vJcTSe.fbi'; // GANTI DENGAN PASSWORD KUAT ANDA!

// --- Autentikasi ---
session_start();

if (!isset($_SESSION['logged_in']) || $_SESSION['logged_in'] !== true) {
    if (isset($_POST['password'])) {
        // PERHATIAN: Perbandingan password ini tidak aman untuk produksi!
        // Untuk keamanan yang lebih baik, gunakan password_hash() dan password_verify()
        // Contoh hash SHA256 (buat hash password Anda di PHP CLI: echo hash('sha256', 'your_strong_password');)
        // $stored_password_hash = 'hash_sha256_dari_password_anda_di_sini';
        // if (hash('sha256', $_POST['password']) === $stored_password_hash) {
        if ($_POST['password'] === $password) { // Mode sederhana sesuai permintaan
            $_SESSION['logged_in'] = true;
        } else {
            $error = "Password salah!";
        }
    } else {
        // Tampilkan form login
        echo '<!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Login File Manager</title>
            <style>
                body { font-family: sans-serif; background-color: #f4f4f4; display: flex; justify-content: center; align-items: center; min-height: 100vh; margin: 0; }
                .login-container { background-color: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); text-align: center; }
                input[type="password"] { width: 100%; padding: 10px; margin-bottom: 15px; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box; }
                button { background-color: #007bff; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; }
                button:hover { background-color: #0056b3; }
                .error { color: red; margin-bottom: 10px; }
            </style>
        </head>
        <body>
            <div class="login-container">
                <h2>Login</h2>
                ';
                if (isset($error)) {
                    echo '<p class="error">' . htmlspecialchars($error) . '</p>';
                }
                echo '
                <form method="post">
                    <input type="password" name="password" placeholder="Password" required>
                    <button type="submit">Login</button>
                </form>
            </div>
        </body>
        </html>';
        exit();
    }
}

// Fungsi pembantu
function get_dir_contents($dir) {
    $files = [];
    if (is_dir($dir)) {
        foreach (scandir($dir) as $node) {
            if ($node == '.' || $node == '..') continue;
            $path = $dir . '/' . $node;
            $type = is_dir($path) ? 'dir' : 'file';
            $size = is_file($path) ? filesize($path) : '';
            $mtime = filemtime($path);
            $files[] = [
                'name' => $node,
                'path' => $path,
                'type' => $type,
                'size' => $size,
                'mtime' => date('Y-m-d H:i:s', $mtime)
            ];
        }
    }
    return $files;
}

function delete_file($path) {
    if (file_exists($path)) {
        if (is_dir($path)) {
            // Hapus direktori dan isinya secara rekursif
            $it = new RecursiveDirectoryIterator($path, RecursiveDirectoryIterator::SKIP_DOTS);
            $files = new RecursiveIteratorIterator($it, RecursiveIteratorIterator::CHILD_FIRST);
            foreach ($files as $file) {
                if ($file->isDir()) {
                    rmdir($file->getRealPath());
                } else {
                    unlink($file->getRealPath());
                }
            }
            return rmdir($path);
        } else {
            return unlink($path);
        }
    }
    return false;
}

function download_file($path) {
    if (file_exists($path) && is_file($path)) {
        header('Content-Description: File Transfer');
        header('Content-Type: application/octet-stream');
        header('Content-Disposition: attachment; filename="' . basename($path) . '"');
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($path));
        readfile($path);
        exit;
    }
}

// Lokasi saat ini
$current_dir = isset($_GET['dir']) ? $_GET['dir'] : '.';
$current_dir = realpath($current_dir);

// Pastikan hanya di dalam root dokumen atau direktori yang diizinkan
// Ini adalah layer keamanan untuk mencegah path traversal
$doc_root = realpath($_SERVER['DOCUMENT_ROOT']);
if (strpos($current_dir, $doc_root) !== 0) {
    $current_dir = $doc_root; // Kembali ke root jika mencoba keluar dari root dokumen
}


// --- Handler Aksi ---
$message = '';
$error_message = '';

if (isset($_POST['action'])) {
    if ($_POST['action'] == 'upload') {
        if (isset($_FILES['file_upload']) && $_FILES['file_upload']['error'] == 0) {
            $target_path = $current_dir . '/' . basename($_FILES['file_upload']['name']);
            if (move_uploaded_file($_FILES['file_upload']['tmp_name'], $target_path)) {
                $message = "File berhasil diunggah.";
            } else {
                $error_message = "Gagal mengunggah file. Pastikan izin direktori benar.";
            }
        } else {
            $error_message = "Tidak ada file yang diunggah atau terjadi kesalahan.";
        }
    } elseif ($_POST['action'] == 'delete' && isset($_POST['path'])) {
        $path_to_delete = realpath($_POST['path']);
        // Penting: Pastikan operasi hanya di dalam $current_dir yang aman
        if (strpos($path_to_delete, $current_dir) === 0) {
            if (delete_file($path_to_delete)) {
                $message = "Berhasil menghapus: " . basename($path_to_delete);
            } else {
                $error_message = "Gagal menghapus: " . basename($path_to_delete);
            }
        } else {
            $error_message = "Akses ditolak untuk menghapus di luar direktori saat ini.";
        }
    } elseif ($_POST['action'] == 'create_folder' && isset($_POST['folder_name'])) {
        $new_folder_name = basename($_POST['folder_name']); // Sanitasi nama folder
        $new_folder_path = $current_dir . '/' . $new_folder_name;
        if (!file_exists($new_folder_path)) {
            if (mkdir($new_folder_path, 0755, true)) {
                $message = "Folder berhasil dibuat: " . htmlspecialchars($new_folder_name);
            } else {
                $error_message = "Gagal membuat folder. Pastikan izin direktori benar.";
            }
        } else {
            $error_message = "Folder sudah ada.";
        }
    } elseif ($_POST['action'] == 'create_file' && isset($_POST['file_name']) && isset($_POST['file_content'])) {
        $new_file_name = basename($_POST['file_name']); // Sanitasi nama file
        $new_file_path = $current_dir . '/' . $new_file_name;
        if (!file_exists($new_file_path)) {
            if (file_put_contents($new_file_path, $_POST['file_content']) !== false) {
                $message = "File berhasil dibuat: " . htmlspecialchars($new_file_name);
            } else {
                $error_message = "Gagal membuat file. Pastikan izin direktori benar.";
            }
        } else {
            $error_message = "File sudah ada.";
        }
    } elseif ($_POST['action'] == 'edit_file' && isset($_POST['file_path']) && isset($_POST['file_content'])) {
        $file_path_to_edit = realpath($_POST['file_path']);
        // Penting: Pastikan operasi hanya di dalam $current_dir yang aman
        if (strpos($file_path_to_edit, $current_dir) === 0 && is_file($file_path_to_edit)) {
            if (file_put_contents($file_path_to_edit, $_POST['file_content']) !== false) {
                $message = "File berhasil diupdate: " . basename($file_path_to_edit);
            } else {
                $error_message = "Gagal mengupdate file.";
            }
        } else {
            $error_message = "File tidak ditemukan atau akses ditolak.";
        }
    }
    // Redirect untuk menghindari resubmission form
    header('Location: ?dir=' . urlencode($current_dir) . '&msg=' . urlencode($message) . '&err=' . urlencode($error_message));
    exit;
}

if (isset($_GET['action'])) {
    if ($_GET['action'] == 'download' && isset($_GET['path'])) {
        $path_to_download = realpath($_GET['path']);
        // Penting: Pastikan operasi hanya di dalam $current_dir yang aman
        if (strpos($path_to_download, $current_dir) === 0) {
            download_file($path_to_download);
        } else {
            die("Akses ditolak untuk download.");
        }
    } elseif ($_GET['action'] == 'view_source' && isset($_GET['path'])) {
        $path_to_view = realpath($_GET['path']);
        // Penting: Pastikan operasi hanya di dalam $current_dir yang aman
        if (strpos($path_to_view, $current_dir) === 0 && is_file($path_to_view)) {
            header('Content-Type: text/plain');
            readfile($path_to_view);
            exit;
        } else {
            die("File tidak ditemukan atau akses ditolak.");
        }
    } elseif ($_GET['action'] == 'edit_file_form' && isset($_GET['path'])) {
        $file_to_edit = realpath($_GET['path']);
        // Penting: Pastikan operasi hanya di dalam $current_dir yang aman
        if (strpos($file_to_edit, $current_dir) === 0 && is_file($file_to_edit)) {
            $file_content = file_get_contents($file_to_edit);
            echo '<!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>Edit File: ' . htmlspecialchars(basename($file_to_edit)) . '</title>
                <style>
                    body { font-family: sans-serif; margin: 20px; background-color: #f4f4f4; }
                    .container { background-color: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                    textarea { width: 100%; height: 400px; margin-bottom: 10px; border: 1px solid #ddd; border-radius: 4px; padding: 10px; box-sizing: border-box; font-family: monospace; }
                    button { background-color: #007bff; color: white; padding: 10px 15px; border: none; border-radius: 4px; cursor: pointer; font-size: 14px; margin-right: 10px; }
                    button:hover { background-color: #0056b3; }
                    a { color: #007bff; text-decoration: none; }
                    a:hover { text-decoration: underline; }
                </style>
            </head>
            <body>
                <div class="container">
                    <h2>Edit File: ' . htmlspecialchars(basename($file_to_edit)) . '</h2>
                    <form method="post">
                        <input type="hidden" name="action" value="edit_file">
                        <input type="hidden" name="file_path" value="' . htmlspecialchars($file_to_edit) . '">
                        <textarea name="file_content">' . htmlspecialchars($file_content) . '</textarea><br>
                        <button type="submit">Simpan Perubahan</button>
                        <a href="?dir=' . urlencode(dirname($file_to_edit)) . '">Batal</a>
                    </form>
                </div>
            </body>
            </html>';
            exit;
        } else {
            die("File tidak ditemukan atau akses ditolak.");
        }
    }
}

// Ambil pesan setelah redirect
if (isset($_GET['msg'])) {
    $message = htmlspecialchars($_GET['msg']);
}
if (isset($_GET['err'])) {
    $error_message = htmlspecialchars($_GET['err']);
}

// Ambil konten direktori
$files_and_dirs = get_dir_contents($current_dir);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple File Manager</title>
    <style>
        body { font-family: sans-serif; margin: 20px; background-color: #f4f4f4; }
        .container { background-color: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1, h2 { color: #333; }
        .breadcrumb { margin-bottom: 20px; font-size: 1.1em; }
        .breadcrumb a { color: #007bff; text-decoration: none; }
        .breadcrumb a:hover { text-decoration: underline; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
        .actions button, .actions a {
            background-color: #007bff; color: white; padding: 8px 12px; border: none; border-radius: 4px;
            cursor: pointer; font-size: 0.9em; text-decoration: none; display: inline-block; margin-right: 5px;
        }
        .actions button.delete { background-color: #dc3545; }
        .actions button:hover, .actions a:hover { opacity: 0.9; }
        .upload-form, .create-form { margin-top: 20px; padding: 15px; border: 1px solid #eee; border-radius: 5px; background-color: #f9f9f9; }
        .upload-form input[type="file"], .create-form input[type="text"] {
            padding: 8px; border: 1px solid #ddd; border-radius: 4px; margin-right: 10px;
        }
        .message { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; padding: 10px; margin-bottom: 15px; border-radius: 5px; }
        .error-message { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; padding: 10px; margin-bottom: 15px; border-radius: 5px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Simple File Manager</h1>

        <?php if ($message): ?>
            <div class="message"><?php echo $message; ?></div>
        <?php endif; ?>
        <?php if ($error_message): ?>
            <div class="error-message"><?php echo $error_message; ?></div>
        <?php endif; ?>

        <div class="breadcrumb">
            Lokasi:
            <?php
            $path_parts = explode('/', str_replace('\\', '/', $current_dir)); // Handle Windows paths
            $full_path = '';
            foreach ($path_parts as $part) {
                if (empty($part) && $full_path !== '') continue; // Skip empty parts unless it's the very beginning
                if (empty($part) && $full_path === '') { // For the root on Unix-like systems, e.g., '/'
                    $full_path = '/';
                    echo '<a href="?dir=' . urlencode($full_path) . '">/</a>';
                } else {
                    $full_path .= '/' . $part;
                    echo '<a href="?dir=' . urlencode($full_path) . '">' . htmlspecialchars($part) . '</a> / ';
                }
            }
            ?>
        </div>

        <?php if ($current_dir != realpath($_SERVER['DOCUMENT_ROOT'])): ?>
            <p><a href="?dir=<?php echo urlencode(dirname($current_dir)); ?>">&laquo; Kembali ke folder induk</a></p>
        <?php endif; ?>

        <table>
            <thead>
                <tr>
                    <th>Nama</th>
                    <th>Tipe</th>
                    <th>Ukuran</th>
                    <th>Terakhir Diubah</th>
                    <th>Aksi</th>
                </tr>
            </thead>
            <tbody>
                <?php if (empty($files_and_dirs)): ?>
                    <tr><td colspan="5">Direktori kosong.</td></tr>
                <?php else: ?>
                    <?php foreach ($files_and_dirs as $item): ?>
                        <tr>
                            <td>
                                <?php if ($item['type'] == 'dir'): ?>
                                    <a href="?dir=<?php echo urlencode($item['path']); ?>"><strong><?php echo htmlspecialchars($item['name']); ?>/</strong></a>
                                <?php else: ?>
                                    <?php echo htmlspecialchars($item['name']); ?>
                                <?php endif; ?>
                            </td>
                            <td><?php echo htmlspecialchars($item['type']); ?></td>
                            <td><?php echo $item['size'] ? round($item['size'] / 1024, 2) . ' KB' : '-'; ?></td>
                            <td><?php echo htmlspecialchars($item['mtime']); ?></td>
                            <td class="actions">
                                <?php if ($item['type'] == 'file'): ?>
                                    <a href="?action=download&path=<?php echo urlencode($item['path']); ?>">Download</a>
                                    <a href="?action=view_source&path=<?php echo urlencode($item['path']); ?>" target="_blank">Lihat</a>
                                    <a href="?action=edit_file_form&path=<?php echo urlencode($item['path']); ?>">Edit</a>
                                <?php endif; ?>
                                <form method="post" style="display:inline-block;" onsubmit="return confirm('Yakin ingin menghapus <?php echo htmlspecialchars($item['name']); ?>?');">
                                    <input type="hidden" name="action" value="delete">
                                    <input type="hidden" name="path" value="<?php echo htmlspecialchars($item['path']); ?>">
                                    <button type="submit" class="delete">Hapus</button>
                                </form>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                <?php endif; ?>
            </tbody>
        </table>

        <div class="upload-form">
            <h2>Unggah File Baru</h2>
            <form method="post" enctype="multipart/form-data">
                <input type="hidden" name="action" value="upload">
                <input type="file" name="file_upload" required>
                <button type="submit">Unggah</button>
            </form>
        </div>

        <div class="create-form">
            <h2>Buat Folder Baru</h2>
            <form method="post">
                <input type="hidden" name="action" value="create_folder">
                <input type="text" name="folder_name" placeholder="Nama folder baru" required>
                <button type="submit">Buat Folder</button>
            </form>
        </div>

        <div class="create-form">
            <h2>Buat File Baru</h2>
            <form method="post">
                <input type="hidden" name="action" value="create_file">
                <input type="text" name="file_name" placeholder="Nama file baru (misal: test.txt)" required><br>
                <textarea name="file_content" placeholder="Isi file (opsional)" rows="5" style="width:100%; margin-top:10px;"></textarea><br>
                <button type="submit">Buat File</button>
            </form>
        </div>
    </div>
</body>
</html>